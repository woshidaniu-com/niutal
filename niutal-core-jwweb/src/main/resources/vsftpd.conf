# Example config file /etc/vsftpd.conf


#1.匿名用户（anonymous）设置

# 控制是否允许匿名用户登入，YES 为允许匿名登入，NO 为不允许。默认值为YES。
# anonymous_enable=YES/NO（YES）
#anonymous_enable=NO
 
#若是启动这项功能，则使用匿名登入时，不会询问密码。默认值为NO。
#no_anon_password=YES/NO（NO）

#定义匿名登入的使用者名称。默认值为ftp。
#ftp_username=ftp

#使用匿名登入时，所登入的目录。默认值为/var/ftp。注意ftp目录不能是777的权限属性，即匿名用户的家目录不能有777的权限。
#anon_root=/var/ftpdir

#下面这四个主要语句控制这文件和文件夹的上传、下载、创建、删除和重命名

#如果设为YES，则允许匿名登入者有上传文件（非目录）的权限，只有在write_enable=YES时，此项才有效。当然，匿名用户必须要有对上层目录的写入权。默认值为NO。
#anon_upload_enable=YES/NO（NO）

#如果设为YES，则允许匿名登入者下载可阅读的档案（可以下载到本机阅读，不能直接在FTP服务器中打开阅读）。默认值为YES。
#anon_world_readable_only=YES/NO（YES）

#如果设为YES，则允许匿名登入者有新增目录的权限，只有在write_enable=YES时，此项才有效。当然，匿名用户必须要有对上层目录的写入权。默认值为NO。
#anon_mkdir_write_enable=YES/NO（NO）

#如果设为YES，则允许匿名登入者更多于上传或者建立目录之外的权限，譬如删除或者重命名。（如果 anon_upload_enable=NO，则匿名用户不能上传文件，
#但可以删除或者重命名已经存在的文件；如果 anon_mkdir_write_enable=NO，则匿名用户不能上传或者新建文件夹，但可以删除或者重命名已经存在的文件夹。）默认值为NO。
#anon_other_write_enable=YES/NO（NO）

# 设置是否改变匿名用户上传文件（非目录）的属主。默认值为NO
#chown_uploads=YES/NO（NO）

# 设置匿名用户上传文件（非目录）的属主名。建议不要设置为root
#chown_username=whoever

#设置匿名登入者新增或上传档案时的umask 值。默认值为077，则新建档案的对应权限为700。
#anon_umask=077

#若是启动这项功能，则必须提供一个档案/etc/vsftpd/banner_emails，内容为email address。
#若是使用匿名登入，则会要求输入email address，若输入的email address 在此档案内，则不允许进入。默认值为NO。
#deny_email_enable=YES/NO（NO）

#此文件用来输入email address，只有在deny_email_enable=YES时，才会使用到此档案。
#若是使用匿名登入，则会要求输入email address，若输入的email address 在此档案内，则不允许进入。
#banned_email_file=/etc/vsftpd/banner_emails

#2.本地用户设置

# 控制是否允许本地用户登入，YES 为允许本地用户登入，NO为不允许。默认值为YES
local_enable=YES
# 当本地用户登入时，将被更换到定义的目录下。默认值为各用户的家目录
# 注意：定义根目录可以是相对路径也可以是绝对路径.相对路径是针对用户的家目录来说的.
# 此项设置每个用户登陆后其根目录为/home/username/ftpdir
local_root=ftpdir
# 是否允许登陆用户有写权限。属于全局设置，默认值为YES
local_umask=077
# 是否允许登陆用户有写权限。属于全局设置，默认值为YES。
write_enable=YES
#本地用户上传档案后的档案权限，与chmod 所使用的数值相同。默认值为0666。
file_open_mode=0755

#3.欢迎语设置

# 如果启动这个选项，那么使用者第一次进入一个目录时，会检查该目录下是否有.message这个档案，
# 如果有，则会出现此档案的内容，通常这个档案会放置欢迎话语，或是对该目录的说明。默认值为开启
#dirmessage_enable=YES/NO（YES）
dirmessage_enable=YES
#设置目录消息文件，可将要显示的信息写入该文件。默认值为.message。
message_file=.message
#这里用来定义欢迎话语的字符串，banner_file是档案的形式，而ftpd_banner 则是字符串的形式。预设为无。
ftpd_banner=Welcome to vsftpd FTP server
#当使用者登入时，会显示此设定所在的档案内容，通常为欢迎话语或是说明。默认值为无。如果欢迎信息较多，则使用该配置项。
#banner_file=/etc/vsftpd/banner

#4.控制用户是否允许切换到上级目录

#在默认配置下，本地用户登入FTP后可以使用cd命令切换到其他目录，这样会对系统带来安全隐患。可以通过以下三条配置文件来控制用户切换目录

#设置是否启用chroot_list_file配置项指定的用户列表文件。默认值为NO。
chroot_list_enable=NO
#用于指定用户列表文件，该文件用于控制哪些用户可以切换到用户家目录的上级目录。
chroot_list_file=/etc/vsftpd/chroot_list
#用于指定用户列表文件中的用户是否允许切换到上级目录。默认值为NO。
chroot_local_user=NO
#通过搭配能实现以下几种效果：
#①当chroot_list_enable=YES，chroot_local_user=YES时，在/etc/vsftpd.chroot_list文件中列出的用户，可以切换到其他目录；未在文件中列出的用户，不能切换到其他目录。
#②当chroot_list_enable=YES，chroot_local_user=NO时，在/etc/vsftpd.chroot_list文件中列出的用户，不能切换到其他目录；未在文件中列出的用户，可以切换到其他目录。
#③当chroot_list_enable=NO，chroot_local_user=YES时，所有的用户均不能切换到其他目录。
#④当chroot_list_enable=NO，chroot_local_user=NO时，所有的用户均可以切换到其他目录。

#5.数据传输设置

#如果设置为NO，所有的文件都不能下载到本地，文件夹不受影响。默认值为YES。
download_enable=YES
# 是否以ASCII方式传输数据。默认情况下，服务器会忽略ASCII方式的请求。 启用此选项将允许服务器以ASCII方式传输数据
# 不过，这样可能会导致由"SIZE /big/file"方式引起的DoS攻击 ， 设置是否启用ASCII 模式上传数据。默认值为NO
#ascii_upload_enable=NO
# 设置是否启用ASCII 模式下载数据。默认值为NO
#ascii_download_enable=NO

#6.访问控制设置

#两种控制方式：一种控制主机访问，另一种控制用户访问。
#①控制主机访问：

# 设置vsftpd是否与tcp wrapper相结合来进行主机的访问控制。默认值为YES。
# 如果启用，则vsftpd服务器会检查/etc/hosts.allow 和/etc/hosts.deny 中的设置，
# 来决定请求连接的主机，是否允许访问该FTP服务器。这两个文件可以起到简易的防火墙功能。
# 比如：若要仅允许192.168.0.1—192.168.0.254的用户可以连接FTP服务器，则在/etc/hosts.allow文件中添加以下内容：
# vsftpd:192.168.0. :allow
# all:all :deny
tcp_wrappers=YES

#②控制用户访问：
#对于用户的访问控制可以通过/etc目录下的vsftpd.user_list和ftpusers文件来实现。

#是否启用vsftpd.user_list文件。
userlist_enable=YES
##定义限制/允许用户登录的文件
userlist_file=/etc/vsftpd/user_list  
#决定user_list文件中的用户是否能够访问FTP服务器。若设置为YES，则user_list文件中的用户不允许访问FTP，若设置为NO，则只有vsftpd.user_list文件中的用户才能访问FTP。
#/etc/vsftpd/ftpusers文件专门用于定义不允许访问FTP服务器的用户列表
#（注意: 如果userlist_enable=YES,userlist_deny=NO,此时如果在vsftpd.user_list和ftpusers中都有 某个用户时，那么这个用户是不能够访问FTP的，即ftpusers的优先级要高）。
#默认情况下vsftpd.user_list和ftpusers，这 两个文件已经预设置了一些不允许访问FTP服务器的系统内部账户。如果系统没有这两个文件，那么新建这两个文件，将用户添加进去即可
userlist_deny=NO

#7.访问速率设置

# 设置匿名登入者使用的最大传输速度，单位为B/s，0 表示不限制速度。默认值为0
anon_max_rate=0
# 本地用户使用的最大传输速度，单位为B/s，0 表示不限制速度。预设值为0
local_max_rate=0

#8.超时时间设置

#设置建立FTP连接的超时时间，单位为秒。默认值为60。（将客户端空闲1分钟后断）
accept_timeout=60
#PORT 方式下建立数据连接的超时时间，单位为秒。默认值为60。（中断1分钟后又重新连接）
connect_timeout=60
# 设置多长时间不对FTP服务器进行任何操作，则断开该FTP连接，单位为秒。默认值为300
idle_session_timeout=300
# 设置建立FTP数据连接的超时时间，单位为秒。默认值为120
data_connection_timeout=120

#9.日志文件设置

# 是否启用上传/下载日志记录。如果启用，则上传与下载的信息将被完整纪录在xferlog_file 所定义的档案中。预设为开启
xferlog_enable=YES
# 设置日志文件名和路径，默认值为/var/log/vsftpd.log
xferlog_file=/var/log/vsftpd.log
# 如果启用，则日志文件将会写成xferlog的标准格式，如同wu-ftpd 一般。默认值为关闭
xferlog_std_format=YES
#如果启用此选项，所有的FTP请求和响应都会被记录到日志中，默认日志文件在/var/log/vsftpd.log。
#启用此选项时，xferlog_std_format不能被激活。这个选项有助于调试。默认值为NO。
log_ftp_protocol=NO

#10.定义用户配置文件

#在vsftpd中，可以通过定义用户配置文件来实现不同的用户使用不同的配置。
#设置用户配置文件所在的目录。当设置了该配置项后，用户登陆服务器后，系统就会到/etc/vsftpd/userconf目录下，读取与当前用户名相同的文件，并根据文件中的配置命令，对当前用户进行更进一步的配置。
#例如：定义user_config_dir=/etc/vsftpd/userconf，且主机上有使用 者 test1,test2，那么我们就在user_config_dir 的目录新增文件名为test1和test2两个文件。
#若是test1 登入，则会读取user_config_dir 下的test1 这个档案内的设定。默认值为无。利用用户配置文件，可以实现对不同用户进行访问速度的控制，在各用户配置文件中定义local_max_rate=XX， 即可。
#user_config_dir=/etc/vsftpd/userconf

#11.FTP的工作方式与端口设置

#FTP有两种工作方式：PORT FTP（主动模式）和PASV FTP（被动模式）

#设置FTP服务器建立连接所监听的端口，默认值为21。
listen_port=21
#设置FTP服务器在指定的IP地址上侦听用户的FTP请求。若不设置，则对服务器绑定的所有IP地址进行侦听。只有在standalone模式运行才有效。
#listen_address=IP地址
#listen_address=127.0.0.1

# 虽然VSFTPD Ftp Server本身支持IPv6网络，而且在配置文件（/etc/vsftpd/vsftpd.conf）中就有一个“#listen_ipv6=YES”选项，但是默认情况下IPv6服务是不生效的。
# 在实际应用中，如果想让VSFTPD同时支持IPv4和IPv6，似乎只要把“#listen_ipv6=YES”取消注释、然后重启VSFTPD服务就OK了。
# 但实际操作中发现，如果只是简单地取消掉“listen_ipv6=YES”的注释，重启服务时会提示VSFTPD在IPv4和IPv6网络下同时运行产生冲突，错误信息如下：
#
#   500 OOPS: run two copies of vsftpd for IPv4 and IPv6
#
# 难道VSFTPD不能同时在IPv4和IPv6网络下运行吗？
#
# 经查资料后发现，VSFTPD可以同时运行在IPv4和IPv6网络下，不过需要使用两个配置文件，将“listen=YES”和“listen_ipv6=YES”
# 分别放在两个配置文件中，一个负责监听IPv4，一个负责监听IPv6，这样就不会冲突了。
# 经测试，IPv4和IPv6确实都可以正常连接。
#listen_ipv6=YES

#设置在PORT方式下，FTP数据连接使用的端口，默认值为20。
ftp_data_port=20
#控制以PORT模式进行数据传输时是否使用20端口(ftp-data)。YES使用，NO不使用。默认值为NO，但RHL自带的vsftpd.conf文件中此参数设为YES。
connect_from_port_20=YES
#是否允许使用port模式，如果需要在数据连接时取消PORT模式时，设此选项为NO。默认值为YES。
port_enable=YES
#默认值为NO。为YES时，取消PORT安全检查。该检查确保外出的数据只能连接到客户端上。小心打开此选项。
port_promiscuous=NO
#若设置为YES，则使用PASV工作模式；若设置为NO，则使用PORT模式。默认值为YES，即使用PASV工作模式。
pasv_enable=YES
#在PASV工作模式下，数据连接可以使用的端口范围的最小端口，0 表示任意端口。默认值为0。
pasv_min_port=30000
#在PASV工作模式下，数据连接可以使用的端口范围的最大端口，0 表示任意端口。默认值为0。
pasv_max_port=30999
#此选项激活时，将关闭PASV模式的安全检查。该检查确保数据连接和控制连接是来自同一个IP地址。小心打开此选项。此选项唯一合理的用法是存在于由安全隧道方案构成的组织中。默认值为NO。
pasv_promiscuous=NO
#使vsftpd在pasv命令回复时跳转到指定的IP地址.(服务器联接跳转?)
#pasv_address=(none)　　

#12.与连接相关的设置

# 是否识别异步ABOR请求。 如果FTP client会下达“async ABOR”这个指令时，这个设定才需要启用；而一般此设定并不安全，所以通常将其取消
#async_abor_enable=YES

#设置vsftpd服务器是否以standalone模式运行。以standalone模式运行是一种较好 的方式，此时listen必须设置为YES，此为默认值。建议不要更改，有很多与服务器运行相关的配置命令，需要在此模式下才有效。若设置为NO，则 vsftpd不是以独立的服务运行，要受到xinetd服务的管控，功能上会受到限制。
listen=YES
#设置vsftpd允许的最大连接数（FTP的最大连接数），默认值为0，表示不受限制。若设置为100时，则同时允许有100个连接，超出的将被拒绝。只有在standalone模式运行才有效。
max_clients=100
#设置每个IP允许与FTP服务器同时建立连接的数目（每IP的最大连接数）。默认值为0，表示不受限制。只有在standalone模式运行才有效。
max_per_ip=100
#设置每个与FTP服务器的连接，是否以不同的进程表现出来。默认值为NO，此时使用ps aux |grep ftp只会有一个vsftpd的进程。若设置为YES，则每个连接都会有一个vsftpd的进程。
setproctitle_enable=NO

#13.虚拟用户设置

#虚拟用户使用PAM认证方式。

#（注意：仅在没有pam验证版本时有用,是否检查用户有一个有效的shell来登录 )
#check_shell = YES
#设置PAM使用的名称，默认值为/etc/pam.d/vsftpd
#pam_service_name=vsftpd
#启用虚拟用户。默认值为NO。
#guest_enable=NO
#这里用来映射虚拟用户。默认值为ftp。
#guest_username=ftp
#当该参数激活（YES）时，虚拟用户使用与本地用户相同的权限。当此参数关闭（NO）时，虚拟用户使用与匿名用户相同的权限。默认情况下此参数是关闭的（NO）。
#virtual_use_local_privs=NO

#14.编码格式 

#这个开关使 vsftpd配置字符过滤器，缺省是NO，就是说vsftpd缺省不会开启这个解码功能的。
charset_filter_enable=YES
#vsftpd将向外输出的字符编码名称（比如一般的情况应该是GBK，GB18030或者GB2312），
charset_client = GBK
# vsftpd所在服务器的系统编码（ubuntu里默认是UTF8）。
charset_server = UTF8
#本地用户使用的编码格式 
local_charset=UTF8
#remote_charset=CP1251

#15.安全与性能

#设置在执行ls –la之类的命令时，是显示UID、GID还是显示出具体的用户名和组名。默认值为NO，即以UID和GID方式显示。若希望显示用户名和组名，则设置为YES。
text_userdb_names=NO
# 是否能使用ls -R命令以防止浪费大量的服务器资源；若是启用此功能，则允许登入者使用ls –R（可以查看当前目录下子目录中的文件）这个指令。默认值为NO
ls_recurse_enable=YES
#如果启用此功能，所有档案的拥有者与群组都为ftp，也就是使用者登入使用ls -al之类的指令，所看到的档案拥有者跟群组均为ftp。默认值为关闭。
hide_ids=NO
# 是否使用单进程模式;这个设定项目比较危险一点～当设定为YES 时，表示每个建立的联机都会拥有一支process 在负责，可以增加 vsftpd 的效能。
# 除非您的系统比较安全，而且硬件配备比较高，否则容易耗尽系统资源.一般建议设定为NO
one_process_model =NO


#16.其他配置

# 运行vsftpd需要的非特权系统用户，缺省是nobody
#nopriv_user=ftpsecure

# Enable this options if you have double "я"
#double_377=0

##显示目录清单时是用本地时间还是GMT时间,可以通过mdtm命令来达到一样的效果
use_localtime=NO

#测试平台优化
#use_sendfile=YES　　  


