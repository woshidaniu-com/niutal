<?xml version="1.0" encoding="UTF-8"?>
<sitemesh xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="sitemash3.xsd">
	
	<!-- By default, SiteMesh will only intercept responses that set the Content-Type HTTP header to text/html
    	 This can be altered to allow SiteMesh to intercept responses for other types.
    	 默认 SiteMesh 只对HTTP响应头中Content-Type为 text/html 的类型进行拦截和装饰，若需要处理其它mime类型需要自行添加配置
    -->
    <mime-type>text/html</mime-type>
	<mime-type>application/vnd.wap.xhtml+xml</mime-type>
	<mime-type>application/xhtml+xml</mime-type>

	 <!--
    	Map default decorator. This shall be applied to all paths if no other paths match.
   		 配置装饰器，仅设置decorator参数时表示为默认的装饰器，当没有任何路径被匹配时启用该装饰器进行装饰
     -->
	<!-- <mapping decorator="/WEB-INF/views/default-decorator.jsp" />-->

	<!-- 对不同的路径，启用不同的装饰器 -->
	<mapping path="/admin/*" decorator="/another-decorator.html" />
 
 	<mapping path="/xtgl*/index_initMenu.*" decorator="/WEB-INF/pages/layouts/index-layout.jsp" />
 	<!-- <mapping path="*/pages/exception/*.*" decorator="/WEB-INF/pages/layouts/error-layout.jsp" /> -->
 	
	<!--
    	Alternative convention. This is more verbose but allows multiple decorators to be applied to a single path.
    	对同一路径可以同时使用多个装饰器
   
	<mapping>
		<path>/articles/*</path>
		<decorator>/WEB-INF/views/article.jsp</decorator>
		<decorator>/WEB-INF/views/body.jsp</decorator>
		<decorator>/WEB-INF/views/footer.jsp</decorator>
	</mapping>
 	-->
 	
	<!-- 
		Exclude path from decoration.
   		 排除，不进行装饰的路径，只需将exclude设置为true即可
	 -->
	<mapping path="**/**/*login*.html" exclude="true" />
	<mapping path="**/**/*cxYhxxIndex.html" exclude="true" />
	<mapping path="**/xtgl*/index_cx*.html" exclude="true" />
	<mapping path="**/**/exception/*.jsp" exclude="true" />
	<mapping path="*sql.jsp" exclude="true" />
	<mapping path="**/**/js/**/*.*" exclude="true" />
	<mapping path="**/**/css/**/*.*" exclude="true" />
	<mapping path="**/**/images/**/*.*" exclude="true" />
	<mapping path="*.js" exclude="true" />
	<mapping path="*.css" exclude="true" />
	<mapping path="**/**/druid/**/*.*" exclude="true" />
	<mapping path="**/**/editor-app/**/*.*" exclude="true" />
	<mapping path="*/modeler.html" exclude="true" />
	<mapping path="*/diagram-viewer/*.*" exclude="true" />
	<mapping path="*/ueditor/*" exclude="true" />
	
    <!-- 
    
	    An advanced feature of SiteMesh is the ability to define custom rules that manipulate tags on a page.
	    These are classes that implement org.sitemesh.content.tagrules.TagRuleBundle.
    
	   	 在BaseSiteMeshBuilder对象的setupDefaults可见如下代码：
	    protected void setupDefaults() {
	        addTagRuleBundles(new CoreHtmlTagRuleBundle(), new DecoratorTagRuleBundle());
	    }
	            通过CoreHtmlTagRuleBundle,DecoratorTagRuleBundle可得知：
	    Sitemesh 3 默认只提供了 head,title,body,meta 等 tag 类型，我们可以通过实现 TagRuleBundle 扩展自定义的 tag 规则 
    -->
	<content-processor>
		<tag-rule-bundle class="com.woshidaniu.web.sitemesh3.content.tagrules.decorate.ExtendDecoratorTagRuleBundle"/>
		<tag-rule-bundle class="com.woshidaniu.web.sitemesh3.content.tagrules.html.ExtendHtmlTagRuleBundle"/>  
	</content-processor>

</sitemesh>