<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="com.woshidaniu.workflow.dao.ISpProcedureDao">

	<resultMap id="spProcedureMap" type="com.woshidaniu.workflow.model.SpProcedure">
		<result property="pid" column="P_ID" />
		<result property="pname" column="P_NAME" />
		<result property="ptype" column="P_TYPE" />
		<result property="pstatus" column="P_STATUS" />
		<result property="pdesc" column="P_DESC" />
		<result property="belongToSys" column="BELONG_TO_SYS" />
		<result property="belongToSysName" column="BELONG_TO_SYS_NAME" />
		<result property="link" column="LINK" />
		<result property="businessType" column="BUSINESS_TYPE" />
		<result property="businessName" column="BUSINESS_NAME" />
		<collection property="spLineList" column="{pid=P_ID}" select="com.woshidaniu.workflow.dao.ISpLineDao.findLineListByPid"/>
		<collection property="spNodeList" column="{pid=P_ID}" select="com.woshidaniu.workflow.dao.ISpNodeDao.findNodeListByPid"/>
	</resultMap>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="pid">
		<![CDATA[
			INSERT INTO SP_PROCEDURE
			  (P_ID, P_TYPE, P_STATUS, P_DESC, BELONG_TO_SYS, LINK)
			VALUES
			  (#{pid},
			   #{ptype,jdbcType=VARCHAR},
			   #{pstatus,jdbcType=VARCHAR},
			   #{pdesc,jdbcType=VARCHAR},
			   #{belongToSys,jdbcType=VARCHAR},
			   #{link,jdbcType=VARCHAR})
		]]>
		
		<selectKey resultType="java.lang.String" order="BEFORE" keyProperty="pid">
			<![CDATA[
			SELECT SYS_GUID() KHLC_ID FROM DUAL
			]]>
		</selectKey>
	</insert>

	<!-- 根据NODEID删除流程 -->
	<delete id="delete">
		<![CDATA[
			DELETE FROM SP_PROCEDURE WHERE P_ID = #{pid}
		]]>
	</delete>
	
	<!-- 删除流程下所有节点的任务 -->
	<delete id="deleteTaskByPid">
		<![CDATA[
			DELETE FROM SP_NODE_TASK t
			 WHERE t.NODE_ID in (SELECT a.NODE_ID FROM SP_NODE a WHERE a.P_ID = #{pid})
		]]>
	</delete>

	<!-- 修改流程 -->
	<update id="update">
		<![CDATA[
			UPDATE SP_PROCEDURE
			   SET P_TYPE = #{ptype},
			       P_STATUS   = #{pstatus},
			       P_DESC   = #{pdesc,jdbcType=VARCHAR},
			       BELONG_TO_SYS = #{belongToSys,jdbcType=VARCHAR},
			       LINK = #{link,jdbcType=VARCHAR}
		]]>
		<![CDATA[
			 WHERE P_ID = #{pid}
		]]>
	</update>
	
	<!-- 是否存在相同名称和业务类型的流程记录 -->
	<select id="getCountByProcedureNameAndPtype"  resultType="int">
        <![CDATA[ SELECT count(P_ID) from sp_Business where b_code=#{businessType}]]>
    </select>
    
    <!-- 根据业务编码查询流程对象 -->
	<select id="findSpProcedureByBCode" resultMap="spProcedureMap">
		<![CDATA[ 
			SELECT a.P_ID, a.P_NAME, a.P_STATUS, a.P_TYPE, a.P_DESC,  a.LINK
			  FROM SP_PROCEDURE a, SP_BUSINESS c
			 WHERE a.P_ID = c.P_ID
			   AND c.B_CODE = #{bCode}
			   and a.P_STATUS = '1'
			   AND ROWNUM = 1 
			   
	 	]]>
	</select> 
	
	<!-- 根据业务编码查询流程对象集合 -->
	<select id="findSpProcedureListByBCode" resultMap="spProcedureMap">
		<![CDATA[ 
			SELECT a.P_ID, a.P_NAME, a.P_STATUS, a.P_TYPE, a.P_DESC,  a.LINK
			  FROM SP_PROCEDURE a, SP_BUSINESS c
			 WHERE 1 = 1 
			   AND a.P_ID = c.P_ID
			   AND c.B_CODE = #{bCode}
	 	]]>
	</select>
	
	<!-- 根据对象中的条件查询记录（结果一个或多个） -->
	<select id="findSpProcedureList" resultMap="spProcedureMap">
		SELECT P_ID, P_NAME, P_STATUS, P_TYPE, P_DESC,  LINK
		  FROM SP_PROCEDURE a 
		  <where>
	        <if test="pid != null and pid != ''">
				<![CDATA[  P_ID = #{pid} ]]>
	        </if>
			<if test="pname != null and pname != ''">
				<![CDATA[ AND P_NAME = #{pname} ]]>
	        </if>
	        <if test="pstatus != null and pstatus != ''">
				<![CDATA[ AND P_STATUS = #{pstatus} ]]>
	        </if>
	        <if test="ptype != null and ptype != ''">
				<![CDATA[ AND P_TYPE = #{ptype} ]]>
	        </if>
        </where>
	</select>
	
	<select id="getPagedAllSpList" resultType="com.woshidaniu.workflow.model.BaseMapWfModel" parameterType="com.woshidaniu.workflow.model.SpProcedure">
		    select a.p_id as pid, c.ywdm as businessType,c.ywmc as businessName,a.p_status as pstatus,a.p_desc as pdesc,d.gs as nodeCounts
	          from SP_PROCEDURE a,
	               sp_business b,
	               sp_business_code c,
	             (select p_id, count(*) as gs from sp_node group by p_id) d
	         where a.p_id = b.p_id
	           and b.b_code = c.ywdm
	           and a.p_id = d.p_id(+)
			<if test="businessName != null and businessName !=''">
    			and c.ywmc like '%'||#{businessName}||'%'
    		</if>
    		<if test="ywdl != null and ywdl !=''">
    			and c.ywdl = #{ywdl}
    		</if>
    </select>
	
	<!-- 根据对象中的条件查询记录（结果一个或多个） -->
	<select id="findSpProcedureById" resultMap="spProcedureMap">
		<![CDATA[ 
			SELECT A.P_ID,
			       P_NAME,
			       P_STATUS,
			       P_TYPE,
			       P_DESC,
			       LINK,
			       C.B_CODE AS BUSINESS_TYPE,
			       D.YWMC AS BUSINESS_NAME
			  FROM SP_PROCEDURE a
        	  LEFT JOIN SP_BUSINESS C ON A.P_ID=C.P_ID
        	  LEFT JOIN SP_BUSINESS_CODE D ON C.B_CODE=D.YWDM
			  WHERE A.P_ID = #{pid}
		]]>
	</select>
	
	<!-- 根据pid获取跳转路径 -->
	<select id="findTzljByPid" resultType="string">
		<![CDATA[ 
			select b.tzlj
			  from sp_business a, sp_business_code b
			 where a.b_code = b.ywdm
			   and a.p_id = #{pid}
		]]>
	</select>
	
	<!-- 根据pid获取申请路径 -->
	<select id="findSqljByPid" resultType="string">
		<![CDATA[ 
			select b.sqlj
			  from sp_business a, sp_business_code b
			 where a.b_code = b.ywdm
			   and a.p_id = #{pid}
		]]>
	</select>
	
	<!-- 查询审核环节标记 -->
	<select id="findSpNodeBjList" parameterType="string" resultType="hashmap">
		select bj,mc from sp_node_bj where ywdm = #{ywdm}
	</select>
	
	<!-- 查询是否符合分支业务 -->
	<select id="getSpFzyw" parameterType="java.util.Map" statementType="CALLABLE" resultType="java.util.Map">    
	  <![CDATA[    
	  {call proc_sp_fzyw (#{ywdm,mode=IN,jdbcType=VARCHAR}, #{userId,mode=IN,jdbcType=VARCHAR} ,#{out_ywdm,mode=OUT,jdbcType=VARCHAR})}    
	  ]]>
	</select>   
</mapper>